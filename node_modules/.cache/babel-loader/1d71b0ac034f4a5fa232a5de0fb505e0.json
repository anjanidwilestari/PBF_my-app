{"ast":null,"code":"import _classCallCheck from \"C:\\\\react\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\react\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\react\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\react\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\react\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\react\\\\my-app\\\\src\\\\container\\\\BlogPost\\\\BlogPost.jsx\";\nimport React, { Component } from \"react\";\nimport \"./BlogPost.css\";\nimport Post from \"../../component/BlogPost/Post\";\nvar BlogPost = /*#__PURE__*/function (_Component) {\n  _inherits(BlogPost, _Component);\n  function BlogPost() {\n    var _getPrototypeOf2;\n    var _this;\n    _classCallCheck(this, BlogPost);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BlogPost)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    //komponen state dari React untuk statefull component\n    _this.state = {\n      //variabel array yang digunakan untuk menyimpan dat API\n      listArtikel: []\n    };\n    return _this;\n  }\n  _createClass(BlogPost, [{\n    key: \"componentDidMount\",\n    //komponen untuk mengecek ketika component telah dimounting, maka dipanggil API\n    value: function componentDidMount() {\n      var _this2 = this;\n      fetch(\"https://jsonplaceholder.typicode.com/posts\") //alamat URL API yang ingin kita ambil datanya\n      .then(function (response) {\n        return response.json();\n      }) //ubah response data dari URL API menjadi sebuah data json\n      .then(function (jsonHasilAmbilDariAPI) {\n        //data json hasil ambil dari API kita masukkan ke dalam listArtikel\n        _this2.setState({\n          listArtikel: jsonHasilAmbilDariAPI\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        class: \"post-artikel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }, \"Daftar Artikel\"), this.state.listArtikel.map(function (artikel) {\n        //looping dan masukkan untuk setiap data yang ada di listArtikel\n        return /*#__PURE__*/React.createElement(Post, {\n          judul: artikel.title,\n          isi: artikel.body,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 18\n          }\n        }); //mappingkan data json dari API sesuai denga  kategorinya\n      }));\n    }\n  }]);\n  return BlogPost;\n}(Component);\nexport default BlogPost;","map":{"version":3,"names":["React","Component","Post","BlogPost","_Component","_inherits","_getPrototypeOf2","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","concat","state","listArtikel","_createClass","key","value","componentDidMount","_this2","fetch","then","response","json","jsonHasilAmbilDariAPI","setState","render","_this3","createElement","class","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","artikel","judul","title","isi","body"],"sources":["C:/react/my-app/src/container/BlogPost/BlogPost.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./BlogPost.css\";\r\nimport Post from \"../../component/BlogPost/Post\";\r\n\r\nclass BlogPost extends Component {\r\n  //komponen state dari React untuk statefull component\r\n  state = {\r\n    //variabel array yang digunakan untuk menyimpan dat API\r\n    listArtikel: [],\r\n  };\r\n  //komponen untuk mengecek ketika component telah dimounting, maka dipanggil API\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts\") //alamat URL API yang ingin kita ambil datanya\r\n      .then((response) => response.json()) //ubah response data dari URL API menjadi sebuah data json\r\n      .then((jsonHasilAmbilDariAPI) => {\r\n        //data json hasil ambil dari API kita masukkan ke dalam listArtikel\r\n        this.setState({\r\n          listArtikel: jsonHasilAmbilDariAPI,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"post-artikel\">\r\n        <h2>Daftar Artikel</h2>\r\n        {this.state.listArtikel.map((artikel) => {\r\n          //looping dan masukkan untuk setiap data yang ada di listArtikel\r\n          return <Post judul={artikel.title} isi={artikel.body} />; //mappingkan data json dari API sesuai denga  kategorinya\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BlogPost;\r\n"],"mappings":";;;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,gBAAgB;AACvB,OAAOC,IAAI,MAAM,+BAA+B;AAAC,IAE3CC,QAAQ,0BAAAC,UAAA;EAAAC,SAAA,CAAAF,QAAA,EAAAC,UAAA;EAAA,SAAAD,SAAA;IAAA,IAAAG,gBAAA;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAL,QAAA;IAAA,SAAAM,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAC,IAAA,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAAF,IAAA,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IAAAP,KAAA,GAAAQ,0BAAA,QAAAT,gBAAA,GAAAU,eAAA,CAAAb,QAAA,GAAAc,IAAA,CAAAC,KAAA,CAAAZ,gBAAA,SAAAa,MAAA,CAAAP,IAAA;IACZ;IAAAL,KAAA,CACAa,KAAK,GAAG;MACN;MACAC,WAAW,EAAE;IACf,CAAC;IAAA,OAAAd,KAAA;EAAA;EAAAe,YAAA,CAAAnB,QAAA;IAAAoB,GAAA;IACD;IAAAC,KAAA,WAAAC,kBAAA,EACoB;MAAA,IAAAC,MAAA;MAClBC,KAAK,CAAC,4CAA4C,CAAC,CAAC;MAAA,CACjDC,IAAI,CAAC,UAACC,QAAQ;QAAA,OAAKA,QAAQ,CAACC,IAAI,EAAE;MAAA,EAAC,CAAC;MAAA,CACpCF,IAAI,CAAC,UAACG,qBAAqB,EAAK;QAC/B;QACAL,MAAI,CAACM,QAAQ,CAAC;UACZX,WAAW,EAAEU;QACf,CAAC,CAAC;MACJ,CAAC,CAAC;IACN;EAAC;IAAAR,GAAA;IAAAC,KAAA,WAAAS,OAAA,EAEQ;MAAA,IAAAC,MAAA;MACP,oBACElC,KAAA,CAAAmC,aAAA;QAAKC,KAAK,EAAC,cAAc;QAAAC,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBACvB1C,KAAA,CAAAmC,aAAA;QAAAE,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAAI,gBAAc,CAAK,EACtB,IAAI,CAACtB,KAAK,CAACC,WAAW,CAACsB,GAAG,CAAC,UAACC,OAAO,EAAK;QACvC;QACA,oBAAO5C,KAAA,CAAAmC,aAAA,CAACjC,IAAI;UAAC2C,KAAK,EAAED,OAAO,CAACE,KAAM;UAACC,GAAG,EAAEH,OAAO,CAACI,IAAK;UAAAX,MAAA,EAAAH,MAAA;UAAAI,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,EAAG,CAAC,CAAC;MAC5D,CAAC,CAAC,CACE;IAEV;EAAC;EAAA,OAAAvC,QAAA;AAAA,EA5BoBF,SAAS;AA+BhC,eAAeE,QAAQ"},"metadata":{},"sourceType":"module"}